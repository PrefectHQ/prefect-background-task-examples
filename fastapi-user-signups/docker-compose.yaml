version: '3.8'
services:
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
  mailboi:
    image: thiht/smocker
    environment:
      SMOCKER_MOCK_SERVER_LISTEN_PORT: "80"
    ports:
      - 18888:8081 # smocker's UI
  marketito:
    image: thiht/smocker
    environment:
      SMOCKER_MOCK_SERVER_LISTEN_PORT: "80"
    ports:
      - 18889:8081 # smocker's UI
  prefect:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    environment:
      PREFECT_HOME: /data
      PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING: True
    command: prefect server start --host 0.0.0.0
    ports:
      - "14200:4200" # host 14200 on my machine
    volumes:
      - prefect-data:/data
      - .:/app
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    environment:
      PREFECT_API_URL: http://prefect:4200/api
      PREFECT_LOCAL_STORAGE_PATH: /task-storage
      PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING: True
    command: python -m fastapi_user_signups
    ports:
      - 8000:8000 
    volumes:
      - task-storage:/task-storage # shared by all containers - could be storage blocck
      - .:/app
    depends_on:
      - prefect
      - redis
      - mailboi
      - marketito
  tasks:
    deploy:
      replicas: 2  # multiple task servers
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    environment:
      PREFECT_API_URL: http://prefect:4200/api
      PREFECT_LOCAL_STORAGE_PATH: /task-storage
      PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING: True
    command: python -m fastapi_user_signups.tasks
    volumes:
      - task-storage:/task-storage
      - .:/app
    depends_on:
      - prefect
      - redis
      - mailboi
      - marketito
  tests:
    deploy:
      replicas: 0
    build:
      context: .
      dockerfile: Dockerfile
      target: testing
    entrypoint: pytest tests --asyncio-mode=auto
    volumes:
      - .:/app
    depends_on:
      - redis
      - mailboi
      - marketito
volumes:
  prefect-data: {}
  redis-data: {}
  task-storage: {}
